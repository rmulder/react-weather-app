{"version":3,"sources":["pages/Landing/styles.ts","components/Header/styles.ts","components/Header/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","components/Button/styles.ts","components/Button/index.tsx","components/Table/styles.ts","components/Table/index.tsx","components/Card/styles.ts","components/Card/index.tsx","components/SearchInput/styles.ts","components/SearchInput/index.tsx","pages/Landing/index.tsx","theme/globalStyles.ts","index.tsx","theme/defaultStyles.ts"],"names":["Container","styled","main","ButtonWrapper","div","TableWrapper","header","theme","colors","primary","Header","footer","secondary","year","Date","getFullYear","Footer","Wrapper","button","active","transitionTime","Button","id","title","onClick","TableHead","SpecialRow","selected","NoResults","SearchWrapper","ContentWrapper","AutocompleteWrapper","Loading","span","Table","data","onCellClick","searchInputValue","onSearchInputChange","selectedValue","withGoogleAutoComplete","value","onChange","searchOptions","types","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","inputProps","onKeyDown","map","suggestion","key","placeId","place_id","a","geocodeByPlaceId","description","event","target","length","item","name","subtitle","isoCode","Card","SearchInput","Landing","useState","currentSection","setCurrentSection","setSearchInputValue","isChooseByCountrySection","setSelectedValue","countries","csc","getAllCountries","filter","country","toLowerCase","includes","handleSectionClick","Number","currentTarget","Object","keys","undefined","city","formatted_address","GlobalStyle","createGlobalStyle","render","document","getElementById"],"mappings":"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","file":"static/js/main.841378e5.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Container = styled.main`\r\n  flex: 1;\r\n  h3 {\r\n    color: black;\r\n\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0.75rem;\r\n  button {\r\n    margin: 0.3rem;\r\n  }\r\n`;\r\n\r\nconst TableWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport { Container, ButtonWrapper, TableWrapper };\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.header`\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  padding: 12px;\r\n  text-align: center;\r\n  p {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nexport { Container };\r\n","import * as S from './styles';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <S.Container>\r\n      <h3>Weather Application</h3>\r\n      <p>What's the weather like today?</p>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.footer`\r\n  padding: 8px;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  small {\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport { Container };\r\n","import * as S from './styles';\r\n\r\nconst year = new Date().getFullYear();\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <S.Container>\r\n      <small>Copyright &copy; {year} Weather Application. All Rights Reserved</small>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\ninterface IWrapperStyled {\r\n  active?: boolean;\r\n}\r\n\r\nconst Wrapper = styled.button<IWrapperStyled>`\r\n  background-color: ${({ theme, active }) =>\r\n    !active ? theme.colors.primary : theme.colors.primary};\r\n  opacity: ${({ active }) => (active ? 1 : 0.6)};\r\n  padding: 8px 16px;\r\n  font-family: 'Poppins', sans-serif;\r\n  font-size: 16px;\r\n  line-height: 1;\r\n  color: white;\r\n  border: none;\r\n  outline: none;\r\n  cursor: ${({ active }) => (!active ? 'pointer' : 'auto')};\r\n  border-radius: 24px;\r\n  &:hover {\r\n    opacity: ${({ active }) => (!active ? '0.8' : null)};\r\n  }\r\n  transition: ${({ theme }) => theme.transitionTime};\r\n`;\r\n\r\nexport { Wrapper };\r\n","import * as S from './styles';\r\nimport { MouseEvent } from 'react';\r\n\r\ninterface IButtonProps {\r\n  title: string;\r\n  active?: boolean;\r\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\r\n  id: string;\r\n}\r\n\r\nconst Button: React.FC<IButtonProps> = ({ id, title, active, onClick }) => {\r\n  return (\r\n    <S.Wrapper active={active} onClick={onClick} id={id}>\r\n      {title}\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\ninterface ISpecialRowStyled {\r\n  selected: boolean;\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 260px;\r\n  border: 1px #e2e8f0 solid;\r\n  color: black;\r\n`;\r\n\r\nconst TableHead = styled.div`\r\n  padding: 12px;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e2e8f0;\r\n`;\r\n\r\nconst SpecialRow = styled.div<ISpecialRowStyled>`\r\n  padding: 8px;\r\n  justify-content: left;\r\n  pointer-events: ${({ selected }) => (selected ? 'none' : 'all')};\r\n  display: flex;\r\n  transition: ${({ theme }) => theme.transitionTime};\r\n  background-color: ${({ theme, selected }) => (selected ? theme.colors.primary : null)};\r\n\r\n  border-top: 1px solid #e2e8f0;\r\n  &:hover {\r\n    background-color: ${({ selected }) => (!selected ? '#f7f7f7' : null)};\r\n    cursor: ${({ selected }) => (!selected ? 'pointer' : 'auto')};\r\n  }\r\n`;\r\n\r\nconst NoResults = styled.div`\r\n  padding: 8px;\r\n  span {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nconst SearchWrapper = styled.div`\r\n  padding: 8px;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 205px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst AutocompleteWrapper = styled.div`\r\n  padding: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  input {\r\n    padding: 8px;\r\n    font-family: 'Poppins', sans-serif;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst Loading = styled.span`\r\n  display: flex;\r\n  border-top: 1px solid #e2e8f0;\r\n  padding: 8px;\r\n`;\r\n\r\nexport {\r\n  Container,\r\n  NoResults,\r\n  SpecialRow,\r\n  TableHead,\r\n  SearchWrapper,\r\n  ContentWrapper,\r\n  AutocompleteWrapper,\r\n  Loading,\r\n};\r\n","import * as S from './styles';\r\nimport { Card, SearchInput } from '../';\r\nimport PlacesAutocomplete, { geocodeByPlaceId } from 'react-places-autocomplete';\r\nimport { Fragment } from 'react';\r\n\r\ninterface ITableProps {\r\n  data?: any[];\r\n  title: string;\r\n  onCellClick: (value: any) => void;\r\n  searchInputValue: string;\r\n  onSearchInputChange: (value: string) => void;\r\n  selectedValue?: any;\r\n  withGoogleAutoComplete?: boolean;\r\n}\r\n\r\nconst Table: React.FC<ITableProps> = ({\r\n  data,\r\n  title,\r\n  onCellClick,\r\n  searchInputValue,\r\n  onSearchInputChange,\r\n  selectedValue,\r\n  withGoogleAutoComplete,\r\n}) => {\r\n  return (\r\n    <S.Container>\r\n      <S.TableHead>\r\n        <h4>{title}</h4>\r\n      </S.TableHead>\r\n      <div>\r\n        {!withGoogleAutoComplete ? (\r\n          <Fragment>\r\n            <S.SearchWrapper>\r\n              <SearchInput\r\n                value={searchInputValue}\r\n                onChange={(event) => onSearchInputChange(event.target.value)}\r\n              />\r\n            </S.SearchWrapper>\r\n            <S.ContentWrapper>\r\n              {(data ? data.length > 0 : null) ? (\r\n                data?.map((item) => {\r\n                  return (\r\n                    <S.SpecialRow\r\n                      key={item.isoCode}\r\n                      selected={item.name === selectedValue?.name}\r\n                      onClick={() => onCellClick(item)}\r\n                    >\r\n                      <Card title={item.name} subtitle={item.isoCode} />\r\n                    </S.SpecialRow>\r\n                  );\r\n                })\r\n              ) : (\r\n                <S.NoResults>\r\n                  <span>No results found...</span>\r\n                </S.NoResults>\r\n              )}\r\n            </S.ContentWrapper>\r\n          </Fragment>\r\n        ) : (\r\n          <PlacesAutocomplete\r\n            value={searchInputValue}\r\n            onChange={onSearchInputChange}\r\n            searchOptions={{ types: ['(cities)'] }}\r\n          >\r\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => {\r\n              // The onKeyDown property had to be removed from the getInputProps due to conflict with the input tag and TS not excepting the prop.\r\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n              const { onKeyDown, ...inputProps } = getInputProps({\r\n                placeholder: 'Search Cities...',\r\n              });\r\n\r\n              return (\r\n                <Fragment>\r\n                  <S.AutocompleteWrapper>\r\n                    <input {...inputProps}></input>\r\n                  </S.AutocompleteWrapper>\r\n                  {loading && <S.Loading>Loading...</S.Loading>}\r\n                  {suggestions.map((suggestion) => {\r\n                    return (\r\n                      <S.SpecialRow\r\n                        {...getSuggestionItemProps(suggestion)}\r\n                        key={suggestion.placeId}\r\n                        selected={suggestion.placeId === selectedValue?.place_id}\r\n                        onClick={async () => {\r\n                          onCellClick(await geocodeByPlaceId(suggestion.placeId));\r\n                        }}\r\n                      >\r\n                        <Card title={suggestion.description} />\r\n                      </S.SpecialRow>\r\n                    );\r\n                  })}\r\n                </Fragment>\r\n              );\r\n            }}\r\n          </PlacesAutocomplete>\r\n        )}\r\n      </div>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  div {\r\n    span {\r\n      margin-right: 5px;\r\n      &:not(:first-child) {\r\n        background-color: #e0e0e0;\r\n        border-radius: 25px;\r\n        padding: 0 12px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { Container };\r\n","import * as S from './styles';\r\n\r\ninterface ICardProps {\r\n  title: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({ title, subtitle }) => {\r\n  return (\r\n    <S.Container>\r\n      <div>\r\n        <span>{title}</span>\r\n        {subtitle && <span>{subtitle}</span>}\r\n      </div>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  input {\r\n    padding: 8px;\r\n    font-family: 'Poppins', sans-serif;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport { Container };\r\n","import * as S from './styles';\r\nimport { ChangeEvent } from 'react';\r\n\r\ninterface ISearchInputProps {\r\n  value: string;\r\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SearchInput: React.FC<ISearchInputProps> = ({ value, onChange }) => {\r\n  return (\r\n    <S.Container>\r\n      <input placeholder=\"Search Countries...\" value={value} onChange={onChange}></input>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { Fragment, useState, MouseEvent } from 'react';\r\nimport * as S from './styles';\r\nimport { Header, Footer, Button, Table } from '../../components';\r\nimport csc from 'country-state-city';\r\nimport { CityType, CountryType } from '../../types';\r\n\r\nconst Landing: React.FC = () => {\r\n  const [currentSection, setCurrentSection] = useState<number>(0);\r\n  const [searchInputValue, setSearchInputValue] = useState<string>('');\r\n\r\n  const isChooseByCountrySection = currentSection === 0;\r\n\r\n  const [selectedValue, setSelectedValue] = useState<any>({});\r\n\r\n  const countries = isChooseByCountrySection\r\n    ? csc.getAllCountries().filter((country) => {\r\n        return country.name.toLowerCase().includes(searchInputValue.toLowerCase());\r\n      })\r\n    : [];\r\n\r\n  const handleSectionClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    setSelectedValue({});\r\n    setCurrentSection(Number(event.currentTarget.id));\r\n    setSearchInputValue('');\r\n  };\r\n\r\n  const handleSearchInputChange = (value: string) => {\r\n    setSearchInputValue(value);\r\n  };\r\n\r\n  const handleOnCountryPress = (country: CountryType) => {\r\n    setSelectedValue(country);\r\n    setSearchInputValue(country.name);\r\n  };\r\n\r\n  const handleOnCityPress = (city: CityType[]) => {\r\n    setSelectedValue(city[0]);\r\n    setSearchInputValue(city[0].formatted_address);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <S.Container>\r\n        <S.ButtonWrapper>\r\n          <Button\r\n            id=\"0\"\r\n            title=\"Choose by country\"\r\n            active={isChooseByCountrySection}\r\n            onClick={handleSectionClick}\r\n          />\r\n          <Button\r\n            id=\"1\"\r\n            title=\"Search by city\"\r\n            active={!isChooseByCountrySection}\r\n            onClick={handleSectionClick}\r\n          />\r\n        </S.ButtonWrapper>\r\n        {Object.keys(selectedValue).length === 0 ? (\r\n          <S.TableWrapper>\r\n            <Table\r\n              data={isChooseByCountrySection ? countries : undefined}\r\n              title={isChooseByCountrySection ? 'Countries' : 'Cities'}\r\n              onCellClick={isChooseByCountrySection ? handleOnCountryPress : handleOnCityPress}\r\n              searchInputValue={searchInputValue}\r\n              onSearchInputChange={handleSearchInputChange}\r\n              selectedValue={selectedValue}\r\n              withGoogleAutoComplete={!isChooseByCountrySection}\r\n            />\r\n          </S.TableWrapper>\r\n        ) : (\r\n          <h3>{`You have selected ${\r\n            selectedValue?.name\r\n              ? `${selectedValue.name} as a country of interest.`\r\n              : `${selectedValue.formatted_address} as a city of interest.`\r\n          }`}</h3>\r\n        )}\r\n      </S.Container>\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html {\r\n        font-family: \"Poppins\", sans-serif;\r\n    }\r\n    #root{\r\n        height:100vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n    }\r\n    body{\r\n        color: white;\r\n    }\r\n    h3, p{\r\n        margin:0;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { render } from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport Landing from './pages/Landing';\nimport GlobalStyle from './theme/globalStyles';\nimport DefaultStyle from './theme/defaultStyles';\n\nrender(\n  <ThemeProvider theme={DefaultStyle}>\n    <GlobalStyle />\n    <Landing />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n","export default {\r\n  colors: {\r\n    primary: '#1C9CF6',\r\n    secondary: '#80caff',\r\n  },\r\n  transitionTime: '0.1s',\r\n};\r\n"],"sourceRoot":""}