{"version":3,"sources":["pages/Landing/styles.ts","components/Header/styles.ts","components/Header/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","components/Toggler/styles.ts","components/Toggler/index.tsx","components/Button/styles.ts","components/Button/index.tsx","components/Table/styles.ts","components/Table/index.tsx","components/Card/styles.ts","components/Card/index.tsx","components/SearchInput/styles.ts","components/SearchInput/index.tsx","pages/Landing/index.tsx","theme/globalStyles.ts","index.tsx","theme/defaultStyles.ts"],"names":["Container","styled","main","header","theme","colors","primary","Header","footer","secondary","year","Date","getFullYear","Footer","div","ButtonWrapper","Toggler","onSectionClick","currentSection","buttonTitles","countries","searchInputValue","onSearchInputChange","onCountryPress","selectedCountry","id","title","active","onClick","data","onCellClick","selectedValue","Wrapper","button","transitionTime","Button","table","SpecialRow","tr","selected","NoResultsRow","Table","value","onChange","length","map","item","name","isoCode","Card","SearchInput","placeholder","Landing","useState","setCurrentSection","setSearchInputValue","setSelectedCountry","csc","getAllCountries","filter","country","toLowerCase","includes","event","Number","currentTarget","GlobalStyle","createGlobalStyle","render","document","getElementById"],"mappings":"qQAEA,IAAMA,EAAYC,IAAOC,KAAV,K,yKCAf,IAAMF,EAAYC,IAAOE,OAAV,KACO,qBAAGC,MAAkBC,OAAOC,WCQnCC,EATU,WACvB,OACE,eAAC,EAAD,WACE,qDACA,mE,6MCJN,IAAMP,EAAYC,IAAOO,OAAV,KAEO,qBAAGJ,MAAkBC,OAAOI,aCF5CC,GAAO,IAAIC,MAAOC,cAUTC,EARU,WACvB,OACE,cAAC,EAAD,UACE,oDAAyBH,EAAzB,kD,+RCLN,IAAMV,EAAYC,IAAOa,IAAV,KAOTC,EAAgBd,IAAOa,IAAV,KCuCJE,EA7B0B,SAAC,GASnC,IARLC,EAQI,EARJA,eACAC,EAOI,EAPJA,eAOI,IANJC,aAAgBb,EAMZ,EANYA,QAASG,EAMrB,EANqBA,UACzBW,EAKI,EALJA,UACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,gBAEA,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQC,GAAG,IAAIC,MAAOpB,EAASqB,OAA2B,IAAnBT,EAAsBU,QAASX,IACtE,cAAC,EAAD,CAAQQ,GAAG,IAAIC,MAAOjB,EAAWkB,OAA2B,IAAnBT,EAAsBU,QAASX,OAEtD,IAAnBC,GACC,cAAC,EAAD,CACEW,KAAMT,EACNU,YAAaP,EACbF,iBAAkBA,EAClBC,oBAAqBA,EACrBS,cAAeP,Q,2WCnCzB,IAAMQ,EAAU/B,IAAOgC,OAAV,KACS,gBAAG7B,EAAH,EAAGA,MAAH,EAAUuB,OAAV,OACevB,EAAMC,OAAOC,WACrC,qBAAGqB,OAAuB,EAAI,MAQ/B,qBAAGA,OAAoC,OAAZ,aAGxB,qBAAGA,OAAgC,KAAR,SAE1B,qBAAGvB,MAAkB8B,kBCJtBC,EARwB,SAAC,GAAoC,IAAlCV,EAAiC,EAAjCA,GAAIC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3D,OACE,cAAC,EAAD,CAAWD,OAAQA,EAAQC,QAASA,EAASH,GAAIA,EAAjD,SACGC,K,q/BCPP,IAAM1B,EAAYC,IAAOmC,MAAV,KA0BTC,EAAapC,IAAOqC,GAAV,KAIM,qBAAGC,SAA2B,OAAS,SAE3C,qBAAGnC,MAAkB8B,kBACf,gBAAG9B,EAAH,EAAGA,MAAH,SAAUmC,SAA2BnC,EAAMC,OAAOC,QAAU,QAE1D,qBAAGiC,SAAwC,KAAZ,aACzC,qBAAGA,SAAwC,OAAZ,aASzCC,EAAevC,IAAOqC,GAAV,KCEHG,EAxCsB,SAAC,GAM/B,IALLZ,EAKI,EALJA,KACAC,EAII,EAJJA,YACAT,EAGI,EAHJA,iBACAC,EAEI,EAFJA,oBACAS,EACI,EADJA,cAEA,OACE,eAAC,EAAD,WACE,kCACE,6BACE,6CAEF,6BACE,6BACE,cAAC,EAAD,CAAaW,MAAOrB,EAAkBsB,SAAUrB,WAItD,gCACGO,EAAKe,OACJf,EAAKgB,KAAI,SAACC,GACR,OACE,cAAC,EAAD,CAAiCP,SAAUO,EAAKC,QAAL,OAAchB,QAAd,IAAcA,OAAd,EAAcA,EAAegB,MAAxE,SACE,6BACE,cAAC,EAAD,CAAMD,KAAMA,EAAMlB,QAASE,OAFZgB,EAAKE,YAQ5B,cAAC,EAAD,UACE,6D,6QC3CZ,IAAMhD,EAAYC,IAAOa,IAAV,KCqBAmC,EAfoB,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,KAAMlB,EAAc,EAAdA,QAC1C,OACE,cAAC,EAAD,CACEA,QAAS,WACPA,EAAQkB,IAFZ,SAKE,gCACE,+BAAOA,EAAKC,OACZ,+BAAOD,EAAKE,gB,kNCfpB,IAAMhD,EAAYC,IAAOa,IAAV,KCcAoC,EARkC,SAAC,GAAyB,IAAvBR,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzD,OACE,cAAC,EAAD,UACE,uBAAOQ,YAAY,sBAAsBT,MAAOA,EAAOC,SAAUA,O,iBCqCxDS,EA1CW,WAAO,IAAD,EACcC,mBAAiB,GAD/B,mBACvBnC,EADuB,KACPoC,EADO,OAEkBD,mBAAiB,IAFnC,mBAEvBhC,EAFuB,KAELkC,EAFK,OAGgBF,qBAHhB,mBAGvB7B,EAHuB,KAGNgC,EAHM,KAKxBpC,EAAYqC,IAAIC,kBAAkBC,QAAO,SAACC,GAC9C,OAAOA,EAAQb,KAAKc,cAAcC,SAASzC,EAAiBwC,kBAgB9D,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,CACE5C,eAlBmB,SAAC8C,GAC1BT,EAAkBU,OAAOD,EAAME,cAAcxC,MAkBvCP,eAAgBA,EAChBC,aAAc,CAAEb,QAAS,oBAAqBG,UAAW,kBACzDa,oBAjBwB,SAACyC,GAC/BR,EAAoBQ,EAAME,cAAcvB,QAiBlCrB,iBAAkBA,EAClBD,UAAWA,EACXG,eAhBqB,SAACqC,GAC5BJ,EAAmBI,GACnBL,EAAoBK,EAAQb,OAetBvB,gBAAiBA,MAGrB,cAAC,EAAD,Q,4bCzCN,IAuBe0C,EAvBKC,YAAH,KCIjBC,iBACE,eAAC,IAAD,CAAehE,MCPF,CACbC,OAAQ,CACNC,QAAS,UACTG,UAAW,WAEbyB,eAAgB,QDEhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFmC,SAASC,eAAe,W","file":"static/js/main.c30d2aa8.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Container = styled.main`\r\n  flex: 1;\r\n`;\r\n\r\nexport { Container };\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.header`\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  padding: 12px;\r\n  text-align: center;\r\n  p {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nexport { Container };\r\n","import * as S from './styles';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <S.Container>\r\n      <h3>Weather Application</h3>\r\n      <p>What's the weather like today?</p>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.footer`\r\n  padding: 8px;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  small {\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport { Container };\r\n","import * as S from './styles';\r\n\r\nconst year = new Date().getFullYear();\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <S.Container>\r\n      <small>Copyright &copy; {year} Weather Application. All Rights Reserved</small>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  margin: 0.75rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  button {\r\n    margin: 0.3rem;\r\n  }\r\n`;\r\n\r\nexport { Container, ButtonWrapper };\r\n","import { ChangeEvent, MouseEvent } from 'react';\r\nimport * as S from './styles';\r\nimport { Button, Table } from '../';\r\nimport { CountryType } from '../../types';\r\n\r\ninterface ITogglerProps {\r\n  onSectionClick: (event: MouseEvent<HTMLButtonElement>) => void;\r\n  currentSection: number;\r\n  buttonTitles: {\r\n    primary: string;\r\n    secondary: string;\r\n  };\r\n  searchInputValue: string;\r\n  onSearchInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n  countries: CountryType[];\r\n  onCountryPress: (country: CountryType) => void;\r\n  selectedCountry?: CountryType;\r\n}\r\n\r\nconst Toggler: React.FC<ITogglerProps> = ({\r\n  onSectionClick,\r\n  currentSection,\r\n  buttonTitles: { primary, secondary },\r\n  countries,\r\n  searchInputValue,\r\n  onSearchInputChange,\r\n  onCountryPress,\r\n  selectedCountry,\r\n}) => {\r\n  return (\r\n    <S.Container>\r\n      <S.ButtonWrapper>\r\n        <Button id=\"0\" title={primary} active={currentSection === 0} onClick={onSectionClick} />\r\n        <Button id=\"1\" title={secondary} active={currentSection === 1} onClick={onSectionClick} />\r\n      </S.ButtonWrapper>\r\n      {currentSection === 0 && (\r\n        <Table\r\n          data={countries}\r\n          onCellClick={onCountryPress}\r\n          searchInputValue={searchInputValue}\r\n          onSearchInputChange={onSearchInputChange}\r\n          selectedValue={selectedCountry}\r\n        />\r\n      )}\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Toggler;\r\n","import styled from 'styled-components';\r\n\r\ninterface IWrapperStyled {\r\n  active?: boolean;\r\n}\r\n\r\nconst Wrapper = styled.button<IWrapperStyled>`\r\n  background-color: ${({ theme, active }) =>\r\n    !active ? theme.colors.primary : theme.colors.primary};\r\n  opacity: ${({ active }) => (active ? 1 : 0.6)};\r\n  padding: 8px 16px;\r\n  font-family: 'Poppins', sans-serif;\r\n  font-size: 16px;\r\n  line-height: 1;\r\n  color: white;\r\n  border: none;\r\n  outline: none;\r\n  cursor: ${({ active }) => (!active ? 'pointer' : 'auto')};\r\n  border-radius: 24px;\r\n  &:hover {\r\n    opacity: ${({ active }) => (!active ? '0.8' : null)};\r\n  }\r\n  transition: ${({ theme }) => theme.transitionTime};\r\n`;\r\n\r\nexport { Wrapper };\r\n","import * as S from './styles';\r\nimport { MouseEvent } from 'react';\r\n\r\ninterface IButtonProps {\r\n  title: string;\r\n  active?: boolean;\r\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\r\n  id: string;\r\n}\r\n\r\nconst Button: React.FC<IButtonProps> = ({ id, title, active, onClick }) => {\r\n  return (\r\n    <S.Wrapper active={active} onClick={onClick} id={id}>\r\n      {title}\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\ninterface ISpecialRowStyled {\r\n  selected: boolean;\r\n}\r\n\r\nconst Container = styled.table`\r\n  margin-top: 0.75rem;\r\n  width: 260px;\r\n  border: 1px #e2e8f0 solid;\r\n  color: black;\r\n  border-collapse: collapse;\r\n  thead {\r\n    tr {\r\n      th {\r\n        border-bottom: 1px solid #e2e8f0;\r\n        padding: 12px;\r\n      }\r\n      td {\r\n        border-bottom: 1px solid #e2e8f0;\r\n        padding: 12px;\r\n      }\r\n    }\r\n  }\r\n  tbody {\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-height: 123px;\r\n    overflow-y: auto;\r\n  }\r\n`;\r\n\r\nconst SpecialRow = styled.tr<ISpecialRowStyled>`\r\n  td {\r\n    padding: 8px !important;\r\n    justify-content: left !important;\r\n    pointer-events: ${({ selected }) => (selected ? 'none' : 'all')};\r\n    display: flex;\r\n    transition: ${({ theme }) => theme.transitionTime};\r\n    background-color: ${({ theme, selected }) => (selected ? theme.colors.primary : null)};\r\n    &:hover {\r\n      background-color: ${({ selected }) => (!selected ? '#f7f7f7' : null)};\r\n      cursor: ${({ selected }) => (!selected ? 'pointer' : 'auto')};\r\n    }\r\n  }\r\n  border-bottom: 1px solid #e2e8f0;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst NoResultsRow = styled.tr`\r\n  td {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nexport { Container, NoResultsRow, SpecialRow };\r\n","import * as S from './styles';\r\nimport { CountryType } from '../../types';\r\nimport { Card, SearchInput } from '../';\r\nimport { ChangeEvent } from 'react';\r\n\r\ninterface ITableProps {\r\n  data: CountryType[];\r\n  onCellClick: (data: CountryType) => void;\r\n  searchInputValue: string;\r\n  onSearchInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n  selectedValue?: CountryType;\r\n}\r\n\r\nconst Table: React.FC<ITableProps> = ({\r\n  data,\r\n  onCellClick,\r\n  searchInputValue,\r\n  onSearchInputChange,\r\n  selectedValue,\r\n}) => {\r\n  return (\r\n    <S.Container>\r\n      <thead>\r\n        <tr>\r\n          <th>Countries</th>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <SearchInput value={searchInputValue} onChange={onSearchInputChange} />\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.length ? (\r\n          data.map((item) => {\r\n            return (\r\n              <S.SpecialRow key={item.isoCode} selected={item.name === selectedValue?.name}>\r\n                <td>\r\n                  <Card item={item} onClick={onCellClick} />\r\n                </td>\r\n              </S.SpecialRow>\r\n            );\r\n          })\r\n        ) : (\r\n          <S.NoResultsRow>\r\n            <td>No results found...</td>\r\n          </S.NoResultsRow>\r\n        )}\r\n      </tbody>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  div {\r\n    span {\r\n      margin-right: 5px;\r\n      &:last-child {\r\n        background-color: #e0e0e0;\r\n        border-radius: 25px;\r\n        padding: 0 12px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { Container };\r\n","import * as S from './styles';\r\nimport { CountryType } from '../../types';\r\n\r\ninterface ICardProps {\r\n  item: CountryType;\r\n  onClick: (data: CountryType) => void;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({ item, onClick }) => {\r\n  return (\r\n    <S.Container\r\n      onClick={() => {\r\n        onClick(item);\r\n      }}\r\n    >\r\n      <div>\r\n        <span>{item.name}</span>\r\n        <span>{item.isoCode}</span>\r\n      </div>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  input {\r\n    padding: 8px;\r\n    font-family: 'Poppins', sans-serif;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport { Container };\r\n","import * as S from './styles';\r\nimport { ChangeEvent } from 'react';\r\n\r\ninterface ISearchInputProps {\r\n  value: string;\r\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SearchInput: React.FC<ISearchInputProps> = ({ value, onChange }) => {\r\n  return (\r\n    <S.Container>\r\n      <input placeholder=\"Search Countries...\" value={value} onChange={onChange}></input>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { Fragment, useState, MouseEvent, ChangeEvent } from 'react';\r\nimport * as S from './styles';\r\nimport { Header, Footer, Toggler } from '../../components';\r\nimport csc from 'country-state-city';\r\nimport { CountryType } from '../../types';\r\n\r\nconst Landing: React.FC = () => {\r\n  const [currentSection, setCurrentSection] = useState<number>(0);\r\n  const [searchInputValue, setSearchInputValue] = useState<string>('');\r\n  const [selectedCountry, setSelectedCountry] = useState<CountryType>();\r\n\r\n  const countries = csc.getAllCountries().filter((country) => {\r\n    return country.name.toLowerCase().includes(searchInputValue.toLowerCase());\r\n  });\r\n\r\n  const handleSectionClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    setCurrentSection(Number(event.currentTarget.id));\r\n  };\r\n\r\n  const handleSearchInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchInputValue(event.currentTarget.value);\r\n  };\r\n\r\n  const handleOnCountryPress = (country: CountryType) => {\r\n    setSelectedCountry(country);\r\n    setSearchInputValue(country.name);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <S.Container>\r\n        <Toggler\r\n          onSectionClick={handleSectionClick}\r\n          currentSection={currentSection}\r\n          buttonTitles={{ primary: 'Choose by Country', secondary: 'Search by City' }}\r\n          onSearchInputChange={handleSearchInputChange}\r\n          searchInputValue={searchInputValue}\r\n          countries={countries}\r\n          onCountryPress={handleOnCountryPress}\r\n          selectedCountry={selectedCountry}\r\n        />\r\n      </S.Container>\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html {\r\n        font-family: \"Poppins\", sans-serif;\r\n    }\r\n    #root{\r\n        height:100vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n    }\r\n    body{\r\n        color: white;\r\n    }\r\n    h3, p{\r\n        margin:0;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { render } from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport Landing from './pages/Landing';\nimport GlobalStyle from './theme/globalStyles';\nimport DefaultStyle from './theme/defaultStyles';\n\nrender(\n  <ThemeProvider theme={DefaultStyle}>\n    <GlobalStyle />\n    <Landing />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n","export default {\r\n  colors: {\r\n    primary: '#1C9CF6',\r\n    secondary: '#80caff',\r\n  },\r\n  transitionTime: '0.1s',\r\n};\r\n"],"sourceRoot":""}